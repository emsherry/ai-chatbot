name: Deploy AI Chatbot to EC2

on:
  push:
    branches:
      - ec2-backup

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout with enough history
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # fetch all history so HEAD~1 always exists

      # Step 2: Determine which service changed
      - name: Determine changed service
        id: changes
        run: |
          # Check if we have at least 2 commits
          if [ "$(git rev-list --count HEAD)" -gt 1 ]; then
            CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          else
            # First commit â€” assume everything changed
            CHANGED_FILES=$(git ls-files)
          fi

          SERVICE=""
          if echo "$CHANGED_FILES" | grep -q '^frontend/'; then
            SERVICE="frontend"
          elif echo "$CHANGED_FILES" | grep -q '^backend/'; then
            SERVICE="backend"
          fi

          if [ -z "$SERVICE" ]; then
            echo "No frontend or backend changes detected, skipping."
          fi

          echo "service=$SERVICE" >> $GITHUB_OUTPUT

      # Step 3: Setup SSH
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Step 4: Deploy to EC2
      - name: Deploy to EC2
        if: steps.changes.outputs.service != ''
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            cd ~/ai-chatbot

            git fetch origin
            git checkout ec2-backup
            git reset --hard origin/ec2-backup

            SERVICE="${{ steps.changes.outputs.service }}"

            echo "Rebuilding only: $SERVICE"
            docker-compose rm -sf \$SERVICE
            docker image prune -f
            docker-compose build \$SERVICE
            docker-compose up -d \$SERVICE
          EOF
